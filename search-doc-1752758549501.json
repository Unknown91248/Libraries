{"searchDocs":[{"title":"Connections","type":0,"sectionRef":"#","url":"/Libraries/api/Connections","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Connections","url":"/Libraries/api/Connections#functions","content":" ","version":null,"tagName":"h2"},{"title":"NewConnection​","type":1,"pageTitle":"Connections","url":"/Libraries/api/Connections#NewConnection","content":"&lt;/&gt; Connections.NewConnection( name: string,-- The name you want to assign to the connection connectiontype: RBXScriptSignal ,-- The type of connection you want to use func: (any) → (any),-- The function to run when the connection is fired AutoConnect: boolean?-- If true then the connection will automatically connect to the function ) → table-- Returns the table so that it's functions can be called This is the function that creates the connection.  ","version":null,"tagName":"h3"},{"title":"GetConnection​","type":1,"pageTitle":"Connections","url":"/Libraries/api/Connections#GetConnection","content":"&lt;/&gt; Connections.GetConnection( Name: string-- The name of the connection you want to get ) → table | nil-- Returns the table so that it's functions can be called or nil, if it isn't found This connection retrieves a connection that was previously created so it makes it possible to run the connections functions via other scripts  ","version":null,"tagName":"h3"},{"title":"Clean​","type":1,"pageTitle":"Connections","url":"/Libraries/api/Connections#Clean","content":"&lt;/&gt; Connections.Clean() → () This function cleans up any connections that are in the &quot;trash can&quot;, to add connections to the trash can you need to use the :AddToClean() function  ","version":null,"tagName":"h3"},{"title":"Connect​","type":1,"pageTitle":"Connections","url":"/Libraries/api/Connections#Connect","content":"&lt;/&gt; Connections:Connect() → RBXScriptConnection -- Returns the newly connected connection Connects the connection that was made.  ","version":null,"tagName":"h3"},{"title":"Disconnect​","type":1,"pageTitle":"Connections","url":"/Libraries/api/Connections#Disconnect","content":"&lt;/&gt; Connections:Disconnect() → () Disconnects the connection if it was previously connected.  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"Connections","url":"/Libraries/api/Connections#Destroy","content":"&lt;/&gt; Connections:Destroy() → () Cleans up/Destroys the connection that is no longer needed.  ","version":null,"tagName":"h3"},{"title":"AddToClean​","type":1,"pageTitle":"Connections","url":"/Libraries/api/Connections#AddToClean","content":"&lt;/&gt; Connections:AddToClean() → () This connection adds said connection to a &quot;trash can&quot; so that when the .Clean() function is ran, all the connections in the &quot;trash can&quot; would be destroyed  ","version":null,"tagName":"h3"},{"title":"ForceRun​","type":1,"pageTitle":"Connections","url":"/Libraries/api/Connections#ForceRun","content":"&lt;/&gt; Connections:ForceRun( ...: any-- any arguments ) → any-- Returns the function data This function allows you to force run the connection's given function with any arguments  ","version":null,"tagName":"h3"},{"title":"ChangeFunction​","type":1,"pageTitle":"Connections","url":"/Libraries/api/Connections#ChangeFunction","content":"&lt;/&gt; Connections:ChangeFunction( newfunc: (any) → any-- the function you want it to update to ) → () This function updates the connection's previous function to the newly set one. ","version":null,"tagName":"h3"},{"title":"Zak's Libraries","type":0,"sectionRef":"#","url":"/Libraries/docs/intro","content":"","keywords":"","version":"Next"},{"title":"📥 Installation​","type":1,"pageTitle":"Zak's Libraries","url":"/Libraries/docs/intro#-installation","content":" All modules are installable via Wally.    ","version":"Next","tagName":"h2"},{"title":"⚙️ Wally Setup​","type":1,"pageTitle":"Zak's Libraries","url":"/Libraries/docs/intro#️-wally-setup","content":" First, ensure Wally is installed. Then follow these steps:  Initialize Wally in your project: wally init Add the package you would like to install to your wally.toml file:  Example:  [dependencies] connections = &quot;unknown91248/connections@0.0.2&quot;   Install dependencies by running wally install in your project's terminal Wally will then create a /Packages folder which is where you will be requiring your scripts from.    ","version":"Next","tagName":"h2"},{"title":"🚀 Usage Example (Connections module)​","type":1,"pageTitle":"Zak's Libraries","url":"/Libraries/docs/intro#-usage-example-connections-module","content":" local ReplicatedStorage = game:GetService(&quot;ReplicatedStorage&quot;) local Connections = require(ReplicatedStorage.Packages.connections) -- Create a new named connection local conn = Connections.NewConnection(&quot;TouchEvent&quot;, workspace.Part.Touched, function(hit) print(&quot;Touched by:&quot;, hit.Name) end) -- Start listening to the event conn:Connect() task.wait(5) -- Cleanup when done conn:Disconnect() conn:Destroy()    ","version":"Next","tagName":"h2"},{"title":"Date","type":0,"sectionRef":"#","url":"/Libraries/api/Date","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Date","url":"/Libraries/api/Date#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetTodayInFormat​","type":1,"pageTitle":"Date","url":"/Libraries/api/Date#GetTodayInFormat","content":"&lt;/&gt; Date.GetTodayInFormat() → string-- Returns the formatted string This function returns the current date in the format of mm/dd/yy  ","version":null,"tagName":"h3"},{"title":"GetStringDate​","type":1,"pageTitle":"Date","url":"/Libraries/api/Date#GetStringDate","content":"&lt;/&gt; Date.GetStringDate( filler: string,-- This is the string that will be inbetween every specifier you put. ...: string-- The specifiers you want to add. ) → string-- Returns the formatted string This function allows you to format a date in any way you want by using os.date() specifiers Example: Date.GetStringDate(&quot;/&quot;,&quot;%m&quot;,&quot;%d&quot;,&quot;%y&quot;) -- Example value would be 06/12/25   ","version":null,"tagName":"h3"},{"title":"MonthTextToNumber​","type":1,"pageTitle":"Date","url":"/Libraries/api/Date#MonthTextToNumber","content":"&lt;/&gt; Date.MonthTextToNumber( month: string-- Month that you would like to be switched to a number. ) → number-- The month number Basic function that switchs a month's name to its number Example: June -&gt; 6  ","version":null,"tagName":"h3"},{"title":"MonthNumberToText​","type":1,"pageTitle":"Date","url":"/Libraries/api/Date#MonthNumberToText","content":"&lt;/&gt; Date.MonthNumberToText( month: number-- Month number that you would like to be switched to a name. ) → string-- The month name Basic function that switchs a month's number to its name Example: 12 -&gt; December  ","version":null,"tagName":"h3"},{"title":"GetNextMonth​","type":1,"pageTitle":"Date","url":"/Libraries/api/Date#GetNextMonth","content":"&lt;/&gt; Date.GetNextMonth( month: string | number-- Month name or number ) → ( string, number )-- The next month's name and number A function that returns the month after the specified month  ","version":null,"tagName":"h3"},{"title":"GetPrevMonth​","type":1,"pageTitle":"Date","url":"/Libraries/api/Date#GetPrevMonth","content":"&lt;/&gt; Date.GetPrevMonth( month: string | number-- Month name or number ) → ( string, number )-- The previous month's name and number A function that returns the month before the specified month  ","version":null,"tagName":"h3"},{"title":"IsLeapYear​","type":1,"pageTitle":"Date","url":"/Libraries/api/Date#IsLeapYear","content":"&lt;/&gt; Date.IsLeapYear( year: number-- The year you want to check ) → boolean-- The boolean on if the year is a leap year A function that returns a boolean on if the specified year is a leap year  ","version":null,"tagName":"h3"},{"title":"GetDaysInMonth​","type":1,"pageTitle":"Date","url":"/Libraries/api/Date#GetDaysInMonth","content":"&lt;/&gt; Date.GetDaysInMonth( month: string | number,-- The month you want to get the days from year: number-- The year (to check if it is a leap year) ) → number-- Amount of days in specified month A function that returns the amount of days that is in the specified month and year Example: February 2024 would return 29 ","version":null,"tagName":"h3"}],"options":{"id":"default"}}